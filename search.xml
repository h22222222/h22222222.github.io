<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[已知起点经纬度及两点间距离和方位角如何求出终点经纬度？（附C#与python代码）]]></title>
    <url>%2Fh22222222.github.io%2F2019%2F07%2F17%2F%E5%B7%B2%E7%9F%A5%E8%B5%B7%E7%82%B9%E7%BB%8F%E7%BA%AC%E5%BA%A6%E5%8F%8A%E4%B8%A4%E7%82%B9%E9%97%B4%E8%B7%9D%E7%A6%BB%E5%92%8C%E6%96%B9%E4%BD%8D%E8%A7%92%E5%A6%82%E4%BD%95%E6%B1%82%E5%87%BA%E7%BB%88%E7%82%B9%E7%BB%8F%E7%BA%AC%E5%BA%A6%EF%BC%88%E9%99%84C%23%E4%B8%8Epython%E4%BB%A3%E7%A0%81%EF%BC%89%2F</url>
    <content type="text"><![CDATA[Get lat/long given current point, distance and bearing. 1、计算公式：lat2 = asin(sin(lat1)cos(d/R) + cos(lat1)sin(d/R)cos(θ))lon2 = lon1 + atan2(sin(θ)sin(d/R)cos(lat1), cos(d/R)−sin(lat1)sin(lat2))其中， asin = arc sin() d = distance (in any unit) R = Radius of the earth (in the same unit as above),and hence d/r = is the angular distance (in radians) atan2(a,b) = arc tan(b/a) θ is the bearing (in radians, clockwise from north); ##2、C#代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace ConsoleApplication1&#123; class Program &#123; static void Main(string[] args) &#123; const double radiusEarthKilometres = 6371.01f; //地球半径，以km为单位 double lat0 = -42.3993; //起点的纬度 double lon0 = 172.7393; //起点的经度 double kmDistance =76; //两点间的距离 double angleRadHeading = 248.352; //方位角：以正北为起始方向顺时针 angleRadHeading =angleRadHeading/180 * Math.PI; double newLat = 0; double newLong = 0; var distRatio = kmDistance / radiusEarthKilometres; var distRatioSine = Math.Sin(distRatio); var distRatioCosine = Math.Cos(distRatio); var startLatRad = lat0/180*Math.PI; var startLonRad = lon0 / 180 * Math.PI; var startLatCos = Math.Cos(startLatRad); var startLatSin = Math.Sin(startLatRad); var endLatRads = Math.Asin((startLatSin * distRatioCosine) + (startLatCos * distRatioSine * Math.Cos(angleRadHeading))); var endLonRads = startLonRad + Math.Atan2(Math.Sin(angleRadHeading) * distRatioSine * startLatCos, distRatioCosine - startLatSin * Math.Sin(endLatRads)); newLat = endLatRads/Math.PI*180; newLong = endLonRads / Math.PI * 180; Console.WriteLine(&quot;终点的纬度为：&#123;0&#125;&quot;, newLat.ToString()); Console.WriteLine(&quot;终点的经度为：&#123;0&#125;&quot;, newLong.ToString()); Console.ReadLine(); &#125; &#125;&#125; 3、python代码：1234567891011121314151617181920212223import mathR = 6378.1 #Radius of the Earthbrng = 1.57 #Bearing is 90 degrees converted to radians.d = 15 #Distance in km#lat2 52.20444 - the lat result I&apos;m hoping for#lon2 0.36056 - the long result I&apos;m hoping for.lat1 = math.radians(52.20472) #Current lat point converted to radianslon1 = math.radians(0.14056) #Current long point converted to radianslat2 = math.asin( math.sin(lat1)*math.cos(d/R) + math.cos(lat1)*math.sin(d/R)*math.cos(brng))lon2 = lon1 + math.atan2(math.sin(brng)*math.sin(d/R)*math.cos(lat1), math.cos(d/R)-math.sin(lat1)*math.sin(lat2))lat2 = math.degrees(lat2)lon2 = math.degrees(lon2)print(lat2)print(lon2) 4、参考： https://stackoverflow.com/questions/7222382/get-lat-long-given-current-point-distance-and-bearing https://cloud.tencent.com/developer/ask/152388]]></content>
      <categories>
        <category>Geodesy and Geomatics</category>
      </categories>
      <tags>
        <tag>Geodesy and Geomatics</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[非科班出身该怎么备战软考？ ---19年高项信管一次过]]></title>
    <url>%2Fh22222222.github.io%2F2019%2F07%2F03%2F%E9%9D%9E%E7%A7%91%E7%8F%AD%E5%87%BA%E8%BA%AB%E8%AF%A5%E6%80%8E%E4%B9%88%E5%A4%87%E6%88%98%E8%BD%AF%E8%80%83%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[2019年上半年参加软考高项考试经验分享&#160; &#160; &#160; &#160;先来厚脸皮地晒一晒我的成绩，48，61，46，非常中规中矩的分数，总分155：&#160; &#160; &#160; &#160;还记得考试那天武汉下大暴雨，电闪雷鸣，挣扎着起床赶到考点，坐的位置还刚好在空调底下（哭笑不得）。当时考完上午第一门的时候，我特地把答案抄在了准考证上（之后想想容易被监考老师认为是小抄，大家尽量不要模仿），之后翻书对着看了几个题之后发现我犹豫的题目全是错的，上午可能过不了了，瞬间就对下午的考试没有信心了，不过抱着第一次考来看看题目也好，仍然坚持考完了试。好在功夫不负有心人，虽然两门都是低分飘过，但好歹是过了，也算是给我之后准备相同类型的考试奠下了基础。&#160; &#160; &#160; &#160;我本身并不是计算机也不是管理学专业，但是由于我们专业和编程密不可分，所以多多少少也了解了一些计算机方面的知识。参加高项考试的初因，还是当时考完计算机四级之后，在百度的“你可能感兴趣”看到了软考，出于对考试的敏感（继承自我的父母，哈哈），便对这个考试上心了。仔细了解了各个级别之后，感觉自己应该比较适合项目管理方面，所以选择了信息系统项目管理师，也不知道大四的自己当时是哪来的自信，直接跨过中级就想去考高级的资格。&#160; &#160; &#160; &#160;在做出选择之后就开始了“愉快”地学习，因为是第一次考，没有啥经验，好在有信管网（再次感叹互联网的强大），在上面看到了很多大佬们的考试经验，也从中了解到了一些考试套路和准备考试的技巧。因为没有管理学课程的基础，看考试教材基本上是看不懂的，寒假的时候我就借助慕课平台（免费的课程资源）找了一些和项目管理有关的课程去学习，也算是无心插柳柳成荫，意外间还获得了一个项目经理证书，虽然含金量不高，还是激动了很久。系统地学习完了项目管理的知识之后再看教材就轻松多了，教材很厚，但是按照我多年来的考试经验，我还是把厚厚一本书通过整理变成了几张纸。初读教材之后便对考试内容有了大致的了解，之后我又在信管网上下载了往年的真题并打印了纸质版（比起在网上阅读电子版，我更喜欢在纸上写字的感觉）。这里也要和大家分享一点做真题的经验，一定要自己动笔先完整地写一遍，之后再去看答案改对错，并且一定要给自己一个分数，对于检验复习情况有着很大的参考意义；对于错题也一定要弄清楚错因，适当做红笔的标注，再次翻阅的时候就重点看错题。另外，真题做多了就会发现一些出题套路，甚至也会发现出题老师钟爱的那些知识点，比如说，软件测试、十大知识领域的ITO、项目立项（可行性研究报告内容、论证和评估的区别）等，题感也就慢慢培养出来了。和在校生相比，很多上班族是没有完整的时间去认真做真题的，那么信管网的每日一练就是非常好的资源，一定要利用碎片时间坚持每天都做，保证题感，如果每次都能在6分以上，那么最后考试选择题应该是基本没有问题的。选择题的最后几道题是英语题，对于基础比较好的同学来说就so easy了，多刷真题，摸索规律就可以了；如果英语不好的，那就只能在平时多背记一些专业词汇（信管网上也有常考英语单词的整理），有时间的话可以看看双语PMP的书提高一下项目管理的英文水平，这五分是一定要拿到手的。&#160; &#160; &#160; &#160;再来说说下午的案例分析题，其实没有想到这项会拿到这么高的分数，也可能是因为之前刷真题，积累了不少的答题模板吧。和上午的选择题相比，感觉案例相对简单一些。问你存在的问题和解决方法是比较容易回答的，基本上第一遍读题的时候就可以把一些存在的问题划出来便于答题；解决方法的话，逐个对应着存在的问题去分析解答就可以了。考察基本概念还有一些知识问答题可能会比较麻烦，毕竟十大知识领域的内容真的太多了，我的经验就是，能记住几条就行，剩下的靠自己的理解去补充，基本上是可以拿到分的（P.S. 案例分析真的非常爱出人力资源管理，尤其是团队建设和激励理论）。挣值计算那道题目其实也是送分题，会画网络图（今年就考到了画时标网络图），记住常用分析指标的公式，读题的时候认真一点，不要把指标的值弄混了，基本上计算题是没有问题的。我记得当时在信管网的经验上看到一句话“得计算题者得天下”，确实非常有道理，计算题的25分拿到了，其他的题目每道能拿个12分左右，及格还是很稳的。&#160; &#160; &#160; &#160;论文是我最头疼的一个部分了，因为不是管理学科班出身，所以总觉得自己对项目管理理解的很浅薄，不深入，便一直拒绝看论文，直到最后两个星期才开始啃论文（后来想想，这样是不行的，越是惧怕的就越应该早点开始攻克）。最后考试下来，论文也是低分飘过，老师多给的一分应该也就是我做的大数据分析项目贡献的了。作为本科生，没有项目管理的经验，但是在写论文时又不能写太小的项目，所以我就想到了我在大学生科研时做的一个大数据分析的软件项目，自己是项目负责人，所以对项目的整体构架、作用、人员分工、进度等内容都还是比较了解的，因此我就以该项目作为论文的实际案例。在准备论文时，我基本上是参考了信管网上发布的论文，分为十大知识领域逐个准备，主要是参考别人的写作框架和思路（摘要、结尾还有正文第一段基本上都有比较固定的模板），把自己的项目套进去，这样准备起来就比较容易一些，由于完整准备十篇论文工程量太大了，我采取的是列大纲的形式，把论文的整体框架、各段的重点论述内容写下来就行，或者我看有些大佬是在电脑文档上写论文初稿，这样也会更省时间一点。如果对自己的项目非常熟悉，不建议全篇背论文，很容易忘，把一些重点条目记下来就好，剩下的内容自己在考场上临场发挥都可以。另外，在考前最后一个星期，建议大家多打印一些论文纸，自己一定要动手写一写，记一下时间。因为大家基本上都是“键盘侠”，都习惯了用电脑码字，但是考试的时候是手写论文，所以还是要自己动一下笔，看看速度和字体的质量（一手好字可是会加印象分的哈）。今年的论文是独创的两大管理知识领域融合在一起考，因此也给我们之后准备软考的小伙伴提个醒，要注意这种考察形式。在备考的时候我参考了上半年信管网的论文投票专题，最后是完整准备了进度管理、成本管理和范围管理三篇文章，结果今年作文题目里能写的就只有成本管理，还融合了一个人力资源管理，当时就有点蒙了，好在以前准备十大知识领域的论文大纲和做真题也积累了不少人力资源的内容，还是够我凑一篇论文的，这也算是不幸中的万幸了。&#160; &#160; &#160; &#160;总结一下，高项看似难，其实就是一个“纸老虎”，是有方法攻破的。&#160; &#160; &#160; &#160;1）希望各位小伙伴们能根据自身的实际制定详细的学习计划，并且一定要坚持落实；&#160; &#160; &#160; &#160;2）信管网真的是一个非常好的资源，如果不想多花钱，每日一练、文档下载、软题库、经验分享都是非常好的学习资源，大家可以很好地利用起来，效果不输参加培训；&#160; &#160; &#160; &#160;3）课本虽然很厚而且枯燥无味，但还是非常有必要完整地看一遍；&#160; &#160; &#160; &#160;4）近五年的真题一定要认真做一遍甚至两遍，对于常考的内容一定要在理解的基础上背记，对于自己不会的地方和易错的地方一定要及时补充起来，重在互通和积累；&#160; &#160; &#160; &#160;5）推荐几本书（在信管网的资料下载中能找到电子版）：&#160; &#160; &#160; &#160;&#160; &#160; ※《信息系统项目管理师计算类试题真题详解》—计算题解题思路看这本书完全够了；&#160; &#160; &#160; &#160;&#160; &#160; ※《信息系统项目管理师考试32小时通关》—如果没有时间完整地看教材，那完整地把这本书看完，也可以作为最后冲刺用，书的最后有一个十大知识领域ITO的总结表格，非常实用；&#160; &#160; &#160; &#160;&#160; &#160; ※《信息系统项目管理师考试论文指导》—对于如何准备论文及常用的模板讲解得很清楚。 &#160; &#160; &#160; &#160;最后，阳光总在风雨后，希望各位备战考试的同学都能取得好成绩！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>软考</tag>
        <tag>高项</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[模拟退火法]]></title>
    <url>%2Fh22222222.github.io%2F2019%2F01%2F22%2F%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E6%B3%95%2F</url>
    <content type="text"><![CDATA[如题 模拟退火法概述模拟退火法来源于固体退火原理，将固体加热至充分高，再让其慢慢冷却，加热时，固体内部粒子随温度升高变为无序状态，内能增大，而慢慢冷却时粒子逐渐有序，在每个温度都达到平衡态，最后再常温时达到基态，内能减为最小。根据Metropolis准则，粒子在温度T时趋于平衡的概率为 e-ΔE/(KT)，其中E为温度T时的内能，ΔE为其改变量，K为Boltzmann常数。用固体退火模拟组合优化问题，将内能E模拟为目标函数f，温度T演化为控制参数t，即得到解组合优化问题的模拟退火法：由初始解i和控制参数初值t开始，对当前解重复“产生新解---计算目标函数差---接受或舍弃”的迭代，并逐步衰减t值，算法终止时的当前解即为所得到的近似最优解，这是基于蒙特卡洛迭代法的一种启发式随机搜索过程。退火过程由冷却进度表（cooling schedule）控制，包括控制参数的初值t及衰减因子Δt、每个t值时的迭代次数L和停止条件S。 算法流程模拟退火算法可以分为解空间、目标函数和初始解三部分。（1）初始化：初始温度T（充分大），初始解状态S（算法迭代的起点），每个T值的迭代次数L（2）对K=1，…，L做第（3）-（6）步；（3）计算新解S’；（4）计算增量Δt’=C(S’)-C(S)，其中C(S)为评价函数；（5）若Δt’&lt;0，则接受S’作为新的当前解，否则以概率exp(-Δt’/T)接受S’作为新的当前解；（6）如果满足终止条件则输出当前解作为最优解，结束程序，终止条件通常取连续若干个新解都没有被接受时种植算法；（7）T逐渐减少，且T&gt;0，转向第二步。 算法解读模拟退火法新解的产生和接受可分为四个部分：第一步是由一个产生函数从当前解产生一个位于解空间的新解；为便于后续的计算和接受，减少算法耗时，通常选择由当前新解经过简单的变换即可产生新解的方法，如对构成新解的全部或者部分元素进行置换、互换等，注意到产生新解的变换方法决定了当前新解的领域结构，因而对冷却进度表的选取有一定的影响。第二步是计算与新解所对应的目标函数差。因而目标函数差仅由变换部分产生，所以目标函数差的计算最好是按增量计算。事实表明，对于大多数应用而言，这是计算目标函数差的最快方法。第三步是判断新解是否被接受，判断依据是一个接受准则，最常用的接受准则是Metropolis准则：若Δt’&lt;0，则接受S’作为新的当前解S，否则以概率exp(-Δt’/T)接受S’作为新的当前解S。第四步是当前新解被确定接受时，用新解代替当前解，这只需要将当前解中对应于产生新解时的变换部分予以实现，同时修正目标函数值即可。此时，当前解实现了一次迭代。可在此基础上开始下一轮试验。而当新解被判定为舍弃时，则在原当前解的基础上继续下一轮试验。 模拟退火法优点（1）模拟退火算法与初始值无关，算法求得的解与初始解状态S无关；（2）模拟退火算法的主要优点之一就是能以一定的概率接受目标函数值不太好的状态， 这使得该算法即便落入局部最优的陷阱中，理论上经过足够长的时间也可以跳出局部最优。因此，模拟退火算法具有渐进收敛性；（3）模拟退火算法具有并行性；]]></content>
      <categories>
        <category>我爱MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何正确优雅地使用武大超算进行MATLAB计算（续）]]></title>
    <url>%2Fh22222222.github.io%2F2019%2F01%2F04%2F%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E6%AD%A6%E5%A4%A7%E8%B6%85%E7%AE%97%E8%BF%9B%E8%A1%8CMATLAB%E8%AE%A1%E7%AE%97%EF%BC%88%E7%BB%AD%EF%BC%89%2F</url>
    <content type="text"><![CDATA[武大超算集群在2018年12月26日进行为期三天的停机升级，同时升级了存储系统。升级之后的超算换汤不换药，原来的配方基础上增加了性能，当然，在超算上运行MATLAB程序也要有所改变了。 升级之后官方的swarm集群文件系统说明/home：用户主目录，主要存放用户的环境变量等信息，限额1G，长期保存;/project：用户项目文件、运行程序等，限额1T，长期保存；/workfs：用户数据文件，限额3T，超过3个月的数据会自动清理；/software：系统软件，用户只读。 原来集群home数据已经迁移到/project/hp_home目录下，用户主目录里有指向hp_home的连接原来集群data下的数据已经迁移到project下 使用升级之后的超算运行MATLAB程序1、超算升级之后，再次运行MATLAB程序时要注意，matlab_mdcs_slurm.sh脚本里的路径 /home/software/....改为 /software/...2、将更改后的matlab_mdcs_slurm.sh仍拷贝到hp_home/data目录下，现在再运行脚本时，要到hp_home/data目录下运行./matlab_mdcs_slurm.sh，脚本里面的工作目录work_dir依然写成”/data/xxx/test6/Codes“就可以了。 123$ cd hp_home$ cd data$ ./ matlab_mdcs_slurm.sh]]></content>
      <categories>
        <category>我爱MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>超算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BBC随身英语]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F24%2FBBC%E9%9A%8F%E8%BA%AB%E8%8B%B1%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[BBC的官网上的专题《随身英语》，文章不长，但是语言点非常丰富，坚持学下来收获颇丰的，但是由于官网是需要翻墙才可以进去，所以我也想把这些资源分享给同样和我一样在学习英语的同伴们，同时，我也加入了一些除了基本的文章外的附加内容，帮助大家更好地理解文章；加入了正宗的英式英语音频，是很好的听力材料呦。嗯，话不多说，每日一更，坚持打卡，必有回响。 资源链接：我的简书—BBC随身英语专题附我很喜欢的一句话：]]></content>
      <categories>
        <category>英语学习打卡</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo blog 之主题个性化]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F20%2Fhexo%20blog%20%E4%B9%8B%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%2F</url>
    <content type="text"><![CDATA[hexo安装过后，默认的主题是landscape，如果不喜欢，我们可以进行更换，同时也可以根据自己的喜好来进行一些个性化的设置。 添加菜单栏内容最原始的主题中，只有首页和归档两个菜单选项，这里我需要添加其他的选项，在主题配置文件_config.yml中的menu选项中添加需要的选项去掉注释即可，我设置了显示标签、分类： 重新部署之后打开博客，点击进去，却报错：Cannot GET /tags/，不要慌，不能获取tags，创建一个就OK！这里介绍创建page的语法：hexo new page &#39;name&#39;# name分别为tags、categories 创建了pages。在gitbash中输入以下命令：hexo new page &#39;tags&#39;#创建tags子目录hexo new page &#39;categories&#39;#创建categories子目录在你的网站根目录下面的source文件夹会分别生成tags、categories以及about文件夹。分别修改tags和categories文件夹中的index.md文件，新增type属性，如下： 12345---title: tagsdate: 2018-01-04 11:45:41type: tags--- categories的修改类似。当你新建一篇博文的时候，增加上tags和categories属性值，就能在tags和categories界面检索到你的文章了，如： 添加fork me on github在 http://tholman.com/github-corners/ 或者 https://github.com/blog/273-github-ribbons 选择合适的样式复制代码到themes/next/layout/_layout.swig在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下面，重新部署就可以了。之后你就会在你的博客顶端看到一只小猫啦！ 修改底部标签样式修改Blog\themes\next\layout\ _macro\post.swig中文件，搜索rel=&quot;tag&quot;&gt;#，将#替换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;。修改后的效果就是这样的： 添加文章阅读量1.进入LeanCloud官网，进行账号注册。登录后，进入控制台，创建应用； 2.创建应用后，点击存储，创建Class； 3.在“应用key”查看AppID和AppKey； 4.打开博客根目录/themes/next/下的_config.yml，查找leancloud，填写复制来的AppID和AppKey，重新生成、部署博客即可正常统计文章阅读量。 增加打赏1.准备支付宝和微信二维码图片，并将图片放入themes/next/source/images中。 2.在_config.yml中配置图片 123reward_comment: 请我喝一杯茶吧！wechatpay: /images/wechat.jpgalipay: /images/aipay.png 鼠标点击出现桃心效果在/themes/next/source/js/src里面新建love.js： !function(e,t,a){function n(){c(&quot;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}&quot;),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)}function o(){var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)}function s(){return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document); 之后在\themes\next\layout\ _layout.swig文件末尾添加以下代码： 1&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 自动更换背景图片1.自动更换背景的实现是修改添加背景的css样式实现。图片来源是 https://source.unsplash.com/， 这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。 2.修改themes\next\source\css\ _custom\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码： 123456body &#123; background:url(https://source.unsplash.com/random/1600x900); background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%;&#125; 如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。 3.修改不透明度完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。那么就需要调整背景的不透明度了。同样是修改themes\next\source\css\ _custom\custom.styl文件。在后面添加如下代码 1234567.main-inner &#123; margin-top: 60px; padding: 60px 60px 60px 60px; background: #fff; opacity: 0.8; min-height: 500px;&#125; 配置 DaoVoice 实现在线聊天功能1.首先需要注册一个 DaoVoice，点击注册。2.注册成功后，进入后台控制台，进入到 应用设置–&gt;安装到网站 页面，可以得到一个 app_id；3.下面就进行主题中的一些设置。以 next 主题为例，打开themes/next/layout/_partials/head.swig文件中添加如下代码，位置随意： 123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;) daovoice(&apos;init&apos;, &#123; app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot; &#125;); daovoice(&apos;update&apos;); &lt;/script&gt;&#123;% endif %&#125; 在主题配置文件_config.yml，添加如下代码： 123# Online contact daovoice: truedaovoice_app_id: 这里输入前面获取的app_id next 主题下聊天的按钮会和其他按钮重叠到一起，可以到聊天设置，修改下按钮的位置:可以在 hexo s 调试模式下进行调试，效果满意后部署就可以看到最终效果啦！ 修改代码块自定义样式打开\themes\next\source\css\_custom\custom.styl，向里面加入：(颜色可以自己定义) 123456789101112131415// Custom styles.code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 更改背景颜色如果不想用背景图片，可选择更改背景颜色，在\themes\next\source\css\_custom中找到custom.styl文件在其中插入以下代码即可（custom.styl文件是next主题专门预留给用户自己自定义css的）： 123body &#123; background-color: #你要调整的颜色;&#125; 这里推荐给大家一个很好的查色号的网站：color-hex，超级好用了！ 引入自定义 js 文件之前看到一个非常好玩的动态人型时钟，找到了它的源码js文件，想在自己的博客里也加一个这样的时钟，如果也有感兴趣的朋友，可以参见：http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js1.将js文件放到your_project\themes\&lt;theme_name&gt;\source\js\src文件目录下；2.之后在\themes\next\layout\ _layout.swig文件中的合适位置加入以下代码即可： 1&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/你的文件.js&quot;&gt;&lt;/script&gt; 当然也可以直接加到你的博文中。 网站底部字数统计1.切换到根目录下，然后运行如下代码1$ npm install hexo-wordcount --save 2.在/themes/next/layout/_partials/footer.swig文件尾部加上：1234&lt;div class=&quot;theme-info&quot;&gt; &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt; &lt;span class=&quot;post-count&quot;&gt;|&amp;nbsp;&amp;nbsp;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 网站底部加上访问量1.打开\themes\next\layout\_partials\footer.swig文件,在copyright前加上： 1&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; 2.在合适的位置添加显示统计的代码：12345&lt;div class=&quot;powered-by&quot;&gt;&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt; 注：不算子有两中不同计算方式的统计代码： pv的方式，单个用户连续点击n篇文章，记录n次访问量 123&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt; 本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; uv的方式，单个用户连续点击n篇文章，只记录1次访客数 123&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; 添加之后再执行hexo d -g，再刷新页面就能看到效果。 修改文章内链接文本样式修改Blog/themes/next/source/css/_common/components/post/post.styl，在末尾添加CSS样式，颜色可以按需更换：1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; //原始链接颜色 border-bottom: none; border-bottom: 1px solid #0593d3; //底部分割线颜色 &amp;:hover &#123; color: #fc6423; //鼠标经过颜色 border-bottom: none; border-bottom: 1px solid #fc6423; //底部分割线颜色 &#125;&#125; 当你鼠标移动到超链接上时超链接就会自动变成你设置的颜色了。 主页显示的文章折叠当不希望主页上显示每篇文章的全文时，可以在博文中.md文件中加一句&lt;!-- more --&gt;，这句代码之后的部分就会被折叠起来，并会显示read more。 参考文献https://blog.csdn.net/mango_haoming/article/details/78473243https://www.jianshu.com/p/9f0e90cc32c2 （强烈推荐，这个写的很全了）https://hoxis.github.io/hexo-next-daovoice.html]]></content>
      <categories>
        <category>前端打怪升级中</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下一站珞珈山]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F15%2F%E4%B8%8B%E4%B8%80%E7%AB%99%E7%8F%9E%E7%8F%88%E5%B1%B1%2F</url>
    <content type="text"><![CDATA[modified by 房东的猫《下一站茶山刘》时间像 武汉三月樱花雨一瞬间 缤纷了珞珈四季仿佛 一切都还在原地谈笑间 却多了分离终于这一天来临我们要各奔东西那么这一餐去星湖还是小潘的店伤感的话不用说忧愁的泪不用流请往前走 不要回头信息学部的大循环在湖滨总会涌上很多人但那拥堵的n小时是最美丽的虚度年华跑不完的九一二也会有别人走过你我的印记呀如果世界真那么大我想从这里出发自强门外的流浪猫从不拒绝你递来的火腿呀打印店里的小窝中偶尔住着它们一家那几个拼命的考试周也成为往后说来就笑的珍藏啦窦哥给予的嘱托早已写进心底啦岁月催促人长大匆忙的脚步早已停不下还没说完的话 就算了吧总有些遗憾要学会放下前路不需太重的行囊和过去和解吧我会像永远不变的时光一如既往归来仍是一珞珈少年写于2018年12月12日]]></content>
      <categories>
        <category>生活小记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MATLAB中如何实现mesh三维图]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F10%2FMATLAB%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0mesh%E4%B8%89%E7%BB%B4%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[当有两个自变量和一个因变量需要进行可视化时，可以使用mesh命令绘制双变量的三维图。 绘制三维图以下是MATLAB官网中对于mesh命令的解读： mesh(X,Y,Z)mesh(X,Y,Z) 使用 Z 确定的颜色绘制线框网格，因此其颜色与曲面高度成比例，其中Z一定是矩阵，X,Y可以是矢量。如果 X 和 Y 为向量，length(X) = n 且 length(Y) = m，其中 [m,n] = size(Z)。在本示例中，(X(j), Y(i), Z(i,j)) 是线框网格线的交点；X 和 Y 分别对应于 Z 的列和行。如果 X 和 Y 为矩阵，则 (X(i,j), Y(i,j), Z(i,j)) 是线框网格线的交点。X、Y 或 Z 中的值可以是数值、日期时间值、持续时间值或分类值。 mesh(Z)mesh(Z) 使用 X = 1:n 和 Y = 1:m 绘制线框网格，其中 [m,n] = size(Z)。高度 Z 是在矩形网格上定义的单值函数。颜色与曲面高度成正比。Z 的值可以是数值、日期时间、持续时间或类别值。 mesh(…,C)mesh(…,C) 使用矩阵 C 确定的颜色绘制线框网格。MATLAB® 对 C 中的数据执行线性转换，以便从当前颜色图获取颜色。如果 X、Y 和 Z 为矩阵，它们的大小必须与 C 相同。 举例：数据来自百度x=[16 17.5 19 21 22 23.7];y=[3 6 9 10 12];z=[ 0.08 0.09 0.09 0.1 0.11 0.11;0.04 0.05 0.06 0.08 0.1 0.15;0.02 0.05 0.12 0.19 0.27 0.44;0.03 0.06 0.2 0.35 0.46 0.62;0.32 0.45 0.84 0.88 0.94 1.17];figure;mesh(x,y,z); %两个自变量，一个因变量xlabel(‘自变量1’);ylabel(‘自变量2’);zlabel(‘因变量Z’);由于数据不够多，画出的图不是光滑，如果想让画出的曲面光滑一些，可以尝试使用griddata命令进行插值。xx=linspace(16,23.7,100);%x是16到23.7的数列，长度为100，长度是可以随意调整的，越大越光滑yy=linspace(3,12,100);%y是3到12的数列，长度为100%数列长度可以根据改变，点数越多，数据点越密zz=griddata(x,y,z,xx,yy’,’cubic’);%三次多项式插值计算figure;mesh(xx,yy,zz);xlabel(‘自变量1’);ylabel(‘自变量2’);zlabel(‘因变量Z’); 设置figure图的背景为白色set(0,’defaultfigurecolor’,’w’) 调整视角使用view命令来更改三维图的视角调用格式 含义view(az,el) 给三维空间图形设置观察点的方位角az与仰角elview([az,el]) 同上view([x,y,z]) 将点(x,y,z)设置为视点view(2) 设置默认的二维形式视点，其中az = 0,el = 90,即从z轴上方观看view(3) 设置默认的三维形式视点，其中az = -37.5, ell = 30[az,el]=view 返回当前的方位角az与仰角el方位角是 x-y 平面中的极坐标角，正值表示按逆时针方向旋转视点。仰角是位于 x-y 平面上方的角度（正角度）或下方的角度（负角度）。]]></content>
      <categories>
        <category>我爱MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何正确优雅地使用武大超算进行MATLAB计算]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F08%2F%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E6%AD%A6%E5%A4%A7%E8%B6%85%E7%AE%97%E8%BF%9B%E8%A1%8CMATLAB%E8%AE%A1%E7%AE%97%2F</url>
    <content type="text"><![CDATA[最近总会跑一些计算量大的matlab程序，然后PC就是灾难现场了，不仅风扇转个不停，声音巨大，而且基本上是不敢再开其他的应用了，cpu占用率惊人，加速球变红…（此时应该有捂脸的表情）这样折腾了几天之后，发现不行，对电脑的伤害太大了，虽然说，电脑就是用来用的，但是也还是得稍微珍惜一下的。之后我就想到了我们学校的超算中心，这么好的资源，不用白不用。于是我就开始了自己的探索过程。 1，进入武汉大学超算中心的网站http://hpc.whu.edu.cn/申请账号什么的就不说了，都是老腊肉了。 2，点击进入快速入门 在快速入门中你将会看到一个简易的使用手册，告诉你如何连接到超算中心。工欲善其事，必先利其器，能够连接到超算中心计算机的工具：Putty：优点：开源，免费。FileZilla：用于文件传输。优点：开源，免费。Xmanager：商业软件，功能强大，带图形服务（X Server），整合文件传输。入门教程是以Putty和FileZilla为例进行讲解的，这两个软件都是可以直接在官网上免费下载的。基本上，Putty主要是用来提交作业的，filezilla 的作用是上传或下载文件到超算。当然，提醒小伙伴们，提交作业的命令都是在Linux系统下完成的，所以还是得有一些基本的Linux操作的知识储备的哈。按照入门教程走一遍之后你就大致掌握了如何连接到超算，如何上传作业了，如何查看队列了。 3，MATLAB MDCS使用指南 超算中心的MATLAB软件存放在指定的目录下，在用的时候需要用到matlab_mdcs_slurm.sh文件并且需要修改一些参数来更好地运行你的程序。1.拷贝/home/software/MATLAB/MDCS/matlab_mdcs_slurm.sh至您的工作目录下 2.编辑matlab_mdcs_slurm.sh，自定义以下参数： #需要计算的m文件所在目录eg：work_dir=”/data/xinming/examples/matlab-jobs/” #需要计算的m文件名，不需要加.m后缀eg：mfile=”name_of_m_file” #用于计算的Task数量eg：ntasks=15 #SLURM分区名eg：partition=”hpxg” #保存结果至mat文件eg：save_mat=”mfile.mat” #是否开启Matlab警告提示eg：warning=”off” #填写账号（就是你申请下来的账号，美元符号别删除哦~）eg：account=”$USER”脚本下半部分的内容一定不可以更改哦！ 3.提交MATLAB MDCS作业（当然是要到你放matlab_mdcs_slurm.sh的工作目录下提交哦~）$ ./matlab_mdcs_slurm.sh提交之后会出来一大堆的内容，大致是显示一些基本参数之类的，有需要就看看，没需要的话就可以忙自己的其他事去了。之后如果没有报错，就可以一直放在那等着它算完，算完之后是不会有提示或者什么命令行显示的，看到你的目录下有结果文件生成了，就是算完了。 4.查询作业情况$ squeue 返回以这种格式的查询结果：JOBID PARTITION NAME USER ST TIME NODES NODELIST(REASON)** R 10:08 1 **其中 JOBID 表示任务 ID，Name 表示任务名称，USER 为用户，TIME 为已 运行时间，NODES 表示占用结点数，NODELIST 为任务运行的结点列表。 5.取消任务$ scancel JOBID ################################################################# #################################################################如果遇到这种错误：那你就需要检查一下你的MATLAB文件的目录、文件名有没有中文，或者是matlab_mdcs_slurm.sh脚本中有中文的全角符号存在，这时候需要把中文都改成英文，符号改成半角符号就OK啦！需要提醒的一点就是，武大超算免费用户只有16核，如果你提交的作业总共超过16核就会有如下提示：检查发现我的一个MATLAB作业就已经用了15核，所以两个作业必然是超过的，所以下次如果需要提交多个作业的时候，一定要注意更改MATLAB作业上的核数，合理分配资源。在matlab_mdcs_slurm.sh文件中修改这个部分就可以了重新分配核数提交之后刚开始会出现这种提示，priority，询问了管理员之后知道是这个作业正在排队中，需要等待。等了差不多20分钟后，出现：此时ST为R，说明作业正在运行中。 超算是个好东西，趁还在学校，赶紧用起来啊骚年！]]></content>
      <categories>
        <category>我爱MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>超算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记---《让未来现在就来，成为高效能的行动派》]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F08%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0---%E3%80%8A%E8%AE%A9%E6%9C%AA%E6%9D%A5%E7%8E%B0%E5%9C%A8%E5%B0%B1%E6%9D%A5%EF%BC%8C%E6%88%90%E4%B8%BA%E9%AB%98%E6%95%88%E8%83%BD%E7%9A%84%E8%A1%8C%E5%8A%A8%E6%B4%BE%E3%80%8B%2F</url>
    <content type="text"><![CDATA[这是一个到处都充斥着鸡汤的时代，它们往往会先抛出一个痛点，再描绘一个解决了这个问题之后的美好世界，但是具体到最重要的部分，怎么做就往往一笔带过了。很少能提供解决方法的，无非就是在强调要坚持，只要坚持就一定会成功。但是，并不是这样的，如果你走错了方向，用错了方法，就算坚持，也不一定会达到真正的目标。 如何高效地管理时间首先需要知道，一个人的时间管理状态可以分为三个阶段：1、很闲，就是生活里只有那么几件事，所以你不是没有时间，你是太闲了，你之所以一再徘徊不前，是因为给自己下了“不改变”的决心而已；2、很忙，觉得自己有很多东西要学，忙忙碌碌的，你便进入了学习模式，你需要在生活、学习、工作中找到平衡点，学会记录自己的时间，搞清楚自己的时间占用比例；3、有选择性地去忙，只做成效高的事情，进入学习+分享模式，利用块状的时间做高成效的事物，断舍离低效的事物。 关于拖延1、我们都是口是心非比如我们都觉得应该少玩手机，多利用碎片时间来看书，而我们制定的计划都是为了满足未来的我，而手机微博朋友圈，才能满足当下的我。2、人是理性的，但是我们的大脑是从动物进化而来，所以我们的行动又往往屈从于动物的本能。亚里士多德提出了一个哲学问题：意志薄弱，也就是我们明明知道这样做对自己有利，但是偏偏不不做的神秘现象。ORZ3、结构拖延法原著：斯坦福 约翰 .佩里 《拖拉一点也无妨》就是将你最想做的事情但是又最难的事情放在你的事物清单的第一位上，通过来做清单上其他不是很紧要的事情来避免最难的事情，但同时，你也做完其他也要做的事情，看起来像是在和自己打心理战，但总比自己啥也没做刷了一下午手机要好得多。4、吞青蛙原著：博恩 .崔西 《吃掉那只青蛙》找出你一天，一周，一个月内，甚至是一年，一生中最重要的三件事，他们就是你必须吃掉的三只青蛙，利用帕累托定理，每天花百分之二十的时间，集中精力，专门对付这三只青蛙。重度拖延症患者可以试试这个方法，在豆瓣和简书上也有很多这样的吞青蛙小组，可以互相监督，帮助养成好习惯。 如何构建自己的知识体系这里可以借助逆向的西蒙.斯涅克的黄金圈法则来阐述这个问题：why—how—what 为什么学？ 知识能够给人价值，价值又体现在资源、人脉、金钱、自信。 怎么学？ 在工作中学习，积累处理工作任务，与人沟通，也可以学习同事之间的优秀做事技巧和方式。在工作外学习，大块的时间用来专注一件事，零碎的时间用来看些tips。教是最好的学习，实现90%的知识转化，分享是最好的方式。 学什么？ 原著：田志刚《你的知识需要管理》可以多个领域一起玩，也需要选中其中一个方向走下去，持之以恒，对于自己不擅长的知识，你需要知道谁最擅长，争取得到别人的帮助。水平最高的人不是方方面面都最高，而是他们知道自己的优势所在，充分发挥自己的优势，紧密和同伴协作。 怎么创新？ 当我们构建起了自己的知识体系之后，创新便是在这个知识体系的各个模块跨界组合。创新源自我们已知的世界，你的知识体系越健壮，越丰满，越经常更新，创新就会是一件小事了。 #################################################结束语：小六的这本书非常清新脱俗，提到了很多有效的方法，这里只是我整理的一部分内容，书中还有一些关于思维导图、个人管理的内容，同时也提出了很多非常tangible的建议，成功的人能成功的一大原因也是他们看到了好的方法就一定会去试一试，人生本来就是不停地和自己的人性作斗争，带上你要开始改变的决心，愿我们都能成为高效的行动派！平庸的人关心怎样耗费时间，有才能的人竭力利用时间 —— 叔本华最聪明的人是最不愿浪费时间的人 —— 但丁浪费时间叫虚度，剥用时间叫生活 —— 扬格]]></content>
      <categories>
        <category>生活小记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+github搭建自己的博客debug]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F07%2Fhexo%2Bgithub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2debug%2F</url>
    <content type="text"><![CDATA[受简书上的小伙伴影响，觉得自己也需要搭建一个自己的博客，说做就做，用了小半天吧，并不是很容易，尤其是中间会出很多很多bug，然后，安装五分钟，debug五小时（此时应有笑哭）最早参考的是简书上的《5分钟 搭建免费个人博客》文章，但他这里面讲的还不是非常细致，所以又看了很多其他的博客，在这里归纳总结一下吧。至于具体的流程：https://www.cnblogs.com/visugar/p/6821777.html这篇博文中讲的还是比较细致的，可以参考。下面我就总结一下出现的问题和解决方法。 问题1：hexo安装成功，并且正确运行，但是localhost:4000不能访问原因1：你没有安装IIS（互联网信息服务）。解决方法：控制面板–程序，然后点击“启用或关闭Windows功能”，把“Internet Information Services”点上。其中有个FTP服务器可以不开。点确定后就自动安装上了。再打开浏览器，输入localhost就行了。原因2：你的电脑4000端口被占用了。hexo默认的端口是4000，如果你的电脑安装了福昕阅读器，那就不能继续使用4000端口啦。解决方法：启动hexo s的时候，用hexo s -p 5000，换成5000端口，就可以访问。 问题2，搭建 hexo，在执行 hexo deploy 后，出现 error deployer not found:github 的错误原因：没安装hexo-deployer-git插件解决方法：1、安装依赖插件npm install hexo-deployer-git --save2、修改_config.yml，deploy的type由github改为gitdeploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master3、重新部署hexo deploy注意：以上的命令都需要在Git bash下完成。（由于没有在Git bash下执行，导致我大半的时间都是在搞这个问题，cmd有毒。有关hexo的博客中有美元符开头的代码，基本上就是在Git bash下完成的啊！） 问题3，一些语法错误比如： can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 11:检查_config.yml中的内容，特别注意所有冒号的后面需要有一个空格！ #################################################当然这是三个比较有代表性的问题了，其他的诸多小问题，也可以参见：https://xuanwo.io/2014/08/14/hexo-usual-problem/ 一文 附几个常用的命令：1、创建博客 $ hexo init username.github.io/2、测试 $ hexo s3、安装hexo-deployer-git自动部署发布工具 $ npm install hexo-deployer-git --save4、发布，测试没问题后，我们就生成静态网页文件发布至我们的Github pages 中。$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo dP.S.,Git bash中复制粘贴是：从其他地方复制后，shift+F12就可以（或者insert）]]></content>
      <categories>
        <category>前端打怪升级中</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何发布自己的文章到hexo博客上]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F07%2F%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%87%E7%AB%A0%E5%88%B0hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%2F</url>
    <content type="text"><![CDATA[用github+hexo搭建完个人博客后，朋友们应该很想知道怎么在上面写博文吧，这里介绍两个很简单的方法 1,使用CSDN网上面提供的MarkDown编辑器http://write.blog.csdn.net/mdeditor (在csdn博客写新文章的时候能切换到这种编辑器)，写好文章后，找到菜单栏的“导出到本地”选项 以md格式导出到本地，然后copy该md文件，粘贴到你当初建的博客站点文件夹下的source\ _posts目录下，一个md文件对应一篇博客文章。接着在你博客站点文件夹下右键空白处，选择Git Bash Here，输入：hexo generate，回车，生成静态页面;再输入：hexo server，回车，到localhost:4000预览博客效果;最后输入：hexo deploy，回车，同步到github上去就行了。 2,打开git bash输入如下命令创建文章，其中title为文章的标题$ hexo new &quot;title&quot;之后会发现在source\ _posts目录下生成了一个”title.md”，之后就可以在这个文件中写自己的博客啦！写好之后再按照上述的步骤走一遍就可以了。]]></content>
      <categories>
        <category>前端打怪升级中</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MATLAB中如何保存嵌套循环的中间变量值]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F12%2F06%2FMATLAB%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BF%9D%E5%AD%98%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF%E7%9A%84%E4%B8%AD%E9%97%B4%E5%8F%98%E9%87%8F%E5%80%BC%2F</url>
    <content type="text"><![CDATA[思想：先预置一个空矩阵，然后把每次循环的结果分别逐个加入这个空矩阵。% Purpose：Save intermediate variable values for nested loops% Programmer：YQH% Date:20181206clear all;tic;lamda1=[0:0.1:1];lamda2=1-lamda1;dip1=[70,80,90]; %idip2=[70,80,90,100]; % jkappa1=[20,24,25];kappa2=[50,59,60,70];l=length(lamda1);a=length(dip1);b=length(dip2);g=length(kappa1);h=length(kappa2);total=labgh; mil1=[];result=[]; %预置的空矩阵file=’results.mat’;for i=1:a for j=1:b for k=1:g for m=1:h for n=1:l mil1=dip1(i)dip2(j)kappa1(k)kappa2(m)lamda1(n)*lamda2(n); result=[result dip1(i) dip2(j) kappa1(k) kappa2(m) mil1 ];% save(file,’mil’,’-append’); %可要可不要 end end end endendresult=result’;result=reshape(result,5,total);result=result’;save(file,’result’);toc]]></content>
      <categories>
        <category>我爱MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MATLAB矩阵计算陌生命令总结（一）]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F11%2F17%2FMATLAB%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97%E9%99%8C%E7%94%9F%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[在进行MATLAB矩阵科学计算时，会用到以下命令，由于不是很熟悉，我将其总结记录如下。 MeshgridMeshgrid生成二维网格，用法为：[x y]=meshgrid(a b);% a 和b是一维数组，如a=[1 2 3]; b= [2 3 4]; 则生成的 X 和 Y 都是为 3X3 维的矩阵。123456789&gt;&gt; [x y]=meshgrid(a,b)x = 1 2 3 1 2 3 1 2 3y = 2 2 2 3 3 3 4 4 4 flipudflipud函数实现矩阵的上下翻转。如：flipud(A)实现了矩阵A的上下翻转。注意：区别于fliplr函数，该函数是实现矩阵的左右翻转。 strrep将Figure中的标题和图例中的下划线正确显示出来：123Figure；plot(x,y)%绘图title(strrep(str1,&apos;_&apos;,&apos;\_&apos;)); repmat1B = repmat(A,m,n) 将矩阵A复制m×n块，即把A作为B的元素，B由m×n个A平铺而成。B的维数是 [size(A,1)m, size(A,2)n] 。 123456789&gt;&gt;A =1 23 4&gt;&gt; B = repmat(A,2,3)B =1 2 1 2 1 23 4 3 4 3 41 2 1 2 1 23 4 3 4 3 4 cholchol函数用于对矩阵进行Cholesky分解，假定X是正定的, R=chol(X)则产生一个上三角阵R,使R’R=X。 blkdiagout = blkdiag(a,b,c,d,...)（其中 a、b、c、d、… 均为矩阵）输出以下形式的分块对角矩阵 12345a 0 0 0 0 00 b 0 0 0 00 0 c 0 0 00 0 0 d 0 00 0 0 0 ... 输入矩阵不必是方阵，其大小也不必相等。 diagdiag函数功能：矩阵对角元素的提取和创建对角阵12345678910111213141516&gt;&gt;aa = -1.3282 -1.7925 0.4092 -0.3803 0.5858 -0.4684 -0.9560 0.7356 0.8292&gt;&gt; diag(aa)ans = -1.3282 0.5858 0.8292&gt;&gt; diag(aa,1)ans = -1.7925 -0.4684&gt;&gt; diag(aa,2)ans = 0.4092]]></content>
      <categories>
        <category>我爱MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sentinel-1精轨数据下载（排雷）]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F11%2F01%2FSentinel-1%E7%B2%BE%E8%BD%A8%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%EF%BC%88%E6%8E%92%E9%9B%B7%EF%BC%89%2F</url>
    <content type="text"><![CDATA[轨道信息是InSAR数据处理中非常重要的信息，从最初的图像配准到最后的形变图像生成都有着重要的作用。含有误差的轨道信息造成基线误差以残差条纹的形式存在于干涉图中。因此，使用卫星精密轨道数据对轨道信息进行修正，可有效去除因轨道误差引起的系统性误差。 Sentinel-1精轨数据官方下载https://qc.sentinel1.eo.esa.int/aux_poeorb/当这个网站无法打开的时候，可以选择如下网站作为替代：https://www.asf.alaska.edu/sentinel/data/ Sentinel-1数据下载 Sentinel-1数据文件命名格式： 轨道数据的下载 点击Sentinel-1A precision state vectors：https://s1qc.asf.alaska.edu/ 包含一个文件目录树◎ aux_poeorb中包含POD Precise Orbit Ephemerides（POD精密定轨星历数据），是最精确的轨道数据，但该数据距离GNSS下行21天之后才可以使用。每天会产生一个文件，每个文件覆盖26个小时（一整天24小时加上一天开始前1小时和一天结束后的1小时），定位精度优于5厘米。◎ aux_resorb中包含POD Restituted Orbit（POD回归轨道数据，是比较精确轨道数据，文件在接收到GNSS数据的3小时内产生。该文件覆盖一个卫星的轨道，从升序节点ANX加593 OSV重叠于卫星轨道的时间跨度之前。定位精度优于10厘米。 轨道文件命名规则1）精密轨道数据文件都有3个日期，1-精密轨道数据发布日期，2-数据成像时间的前一天，3-数据成像时间的后一天。20180607成像的轨道文件即为：!!!注意：一定要看清楚是S1A任务还是S1B，文件目录的前半部分是S1A，后半部分是S1B。（踩雷）轨道参数文件命名规则详见官方参考文档52页https://sentinel.esa.int/documents/247904/351187/GMES_Sentinels_POD_Service_File_Format_Specification2）对于回归轨道的数据：V后面的代表有效的时间段，包含起止时间。由所需的成像时间去选取合适的时间段。※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※也有另一些欧空局哥白尼计划的参与者的网站也是可以下载到Sentinel-1数据的：※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※]]></content>
      <categories>
        <category>玩转卫星</category>
      </categories>
      <tags>
        <tag>InSAR</tag>
        <tag>卫星数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sentinel-1A卫星数据下载]]></title>
    <url>%2Fh22222222.github.io%2F2018%2F10%2F12%2FSentinel-1A%E5%8D%AB%E6%98%9F%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[Sentinel-1A卫星于2014年4月3日发射升空，是欧洲空间局哥白尼计划发射的首颗环境监测卫星。经过一年左右的调试和预运行，在2015年4月至5月期间，该卫星开始稳定运行，采用12天的重访周期进行全球成像，Sentinel-1B也于2016年4月25号成功发射。届时两颗卫星同时运行，将观测效率提高一倍，缩短为6天。欧洲空间局对卫星数据实施免费开放政策，这极大地推动了InSAR技术在国内的发展与应用。下载网址：哨兵科学数据中心（Sentinels Scientific Data Hub）数据下载网址：https://scihub.copernicus.eu/（也有说法：https://scihub.esa.int，但是网站无法打开），用来查询和下载Sentinel系列卫星数据。（1）访问网址，进入网址首页。（2）点击Open Hub进入数据查询页面。（3）注册并登录，在查询窗口输入感兴趣区域名称和数据类型或者先绘制感兴趣区域后在搜索框中输入要下载的数据类型进行查询（干涉数据查询时，绘制感兴趣区域要尽量小，避免出现多轨道数据查询结果。下载多景数据进行干涉叠加处理时，需按照同一轨道且重访周期12天及12天的倍数进行数据下载）。（4）做DnSAR处理时，干涉像对应当尽量选取时间和空间基线都较短的，以保证较好的干涉效果。点击Add Product to Cart将需要的数据添加到右侧Cart中。右侧的五个图标分别代表“select product”、“zoom to product”、“view product details（显示SLC影像的详细）”、“remove product from cart”及“download product”。（5）确定需要的SLC像对之后点击下载，由于单个数据的大小都在6G以上，所以需要一个较大的内存空间，可在硬盘中下载，下载时间大约两个小时这样。附：哨兵1A数据类型：SM SLC ——条带模式的斜距单视复数产品IW SLC——干涉宽幅模式（TOPS Mode）的斜距单视复数产品EW SLC——超宽幅模式（TOPS Mode）的斜距单视复数产品SM GRD——条带模式的地距多视产品IW GRD——干涉宽幅模式（TOPS Mode）的地距多视产品EW GRD——超宽幅模式（TOPS Mode）的地距多视产品]]></content>
      <categories>
        <category>玩转卫星</category>
      </categories>
      <tags>
        <tag>InSAR</tag>
        <tag>卫星数据</tag>
      </tags>
  </entry>
</search>
